{"version":3,"sources":["components/LoginPage.js","components/PrimarySearchAppBar.js","components/SpotSearchForm.js","components/SpotsList.js","components/InteractiveMap.js","components/PageFooter.js","styles/PageFooterStyles.js","components/UserHome.js","styles/UserHomeStyles.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","styles","props","classes","useState","email","setEmail","username","setUserName","className","LoginFormContainer","onSubmit","history","push","label","onChange","e","target","value","name","validators","errorMessages","Button","type","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","AppBar","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","SpotSearchForm","spots","TableContainer","component","Paper","tableContainer","Table","table","TableHead","TableRow","TableCell","align","TableBody","map","spot","key","scope","country","lat","long","probability","month","mapStyles","marginBottom","MapContainer","google","this","zoom","style","initialCenter","lng","Component","GoogleApiWrapper","apiKey","footer","fontWeight","footerEmoji","fontSize","margin","paletteName","emoji","userHomeContainer","flexDirection","navbar","form","zIndex","left","top","rows","setRows","useEffect","a","async","axios","get","API_URL","response","data","fetchData","classname","appbar","InteractiveMap","App","exact","path","render","routeProps","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c8c2e3d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Button } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"../styles/LoginPageStyles\";\n\nfunction LoginPage(props) {\n  const { classes } = props;\n  const [email, setEmail] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n\n  const handleNameChange = e => {\n    setUserName(e.target.value);\n  };\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    props.history.push(\"/home\");\n  };\n\n  return (\n    <div className={classes.LoginFormContainer}>\n      <ValidatorForm onSubmit={handleSubmit}>\n        <TextValidator\n          label=\"Username\"\n          onChange={handleNameChange}\n          name=\"username\"\n          value={username}\n          validators={[\"required\"]}\n          errorMessages={[\"this field is required\"]}\n        />\n        <TextValidator\n          label=\"Email\"\n          onChange={handleEmailChange}\n          name=\"email\"\n          value={email}\n          validators={[\"required\", \"isEmail\"]}\n          errorMessages={[\"this field is required\", \"email is not valid\"]}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </ValidatorForm>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(LoginPage);\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200\n    }\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  }\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Material-UI\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"@material-ui/core\";\n\nfunction SpotSearchForm(props) {\n  const url = \"https://5e3064ed576f9d0014d63faf.mockapi.io\";\n  const [input, setInput] = useState(\"\");\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    axios.get(url + \"/spot\").then(response => console.log(response.data));\n  };\n\n  return (\n    <div className=\"SpotSearchForm\">\n      <p>Locations</p>\n      <div>\n        <input type=\"text\" onChange={handleChange} />\n        <Button type=\"submit\" onClick={handleSubmit}>\n          Search\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default SpotSearchForm;\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"../styles/SpotsListStyles\";\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 650\n//   }\n// });\n\nfunction SpotsList(props) {\n  // const classes = useStyles();\n  const { classes, spots } = props;\n\n  return (\n    <div>\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Spot Name</TableCell>\n              <TableCell align=\"right\">Country</TableCell>\n              <TableCell align=\"right\">Latitude</TableCell>\n              <TableCell align=\"right\">Longitude</TableCell>\n              <TableCell align=\"right\">Wind Probability</TableCell>\n              <TableCell align=\"right\">When To Go</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {spots.map(spot => (\n              <TableRow key={spot.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {spot.name}\n                </TableCell>\n                <TableCell align=\"right\">{spot.country}</TableCell>\n                <TableCell align=\"right\">{spot.lat}</TableCell>\n                <TableCell align=\"right\">{spot.long}</TableCell>\n                <TableCell align=\"right\">{spot.probability}</TableCell>\n                <TableCell align=\"right\">{spot.month}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* <Button onClick={fetchData}>Get Data</Button> */}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(SpotsList);\n","import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\n\nconst mapStyles = {\n  width: \"100vw\",\n  height: \"40vh\",\n  marginBottom: \"2rem\"\n};\n\nexport class MapContainer extends Component {\n  render() {\n    return (\n      <div className=\"mapContainer\">\n        <Map\n          google={this.props.google}\n          zoom={14}\n          style={mapStyles}\n          initialCenter={{\n            lat: -1.2884,\n            lng: 36.8233\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAFR9ohystEpVf1UyEPad9Mfh56S3-R6Qo\"\n})(MapContainer);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport styles from \"../styles/PageFooterStyles\";\n\nfunction PageFooter(props) {\n  const { paletteName, emoji, classes } = props;\n  return (\n    <footer className={classes.footer}>\n      Liviu Preda 2020\n      {/* <span className={classes.footerEmoji}>{emoji}</span> */}\n    </footer>\n  );\n}\n\nexport default withStyles(styles)(PageFooter);\n","export default {\n  footer: {\n    backgroundColor: \"black\",\n    height: \"5vh\",\n\n    alignItems: \"center\",\n    fontWeight: \"bold\"\n  },\n  footerEmoji: {\n    fontSize: \"1.5rem\",\n    margin: \"0 1rem\"\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PrimarySearchAppBar from \"./PrimarySearchAppBar\";\nimport SpotSearchForm from \"./SpotSearchForm\";\nimport SpotsList from \"./SpotsList\";\nimport InteractiveMap from \"./InteractiveMap\";\nimport PageFooter from \"./PageFooter\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"../styles/UserHomeStyles\";\n\nconst API_URL = \"https://5e3064ed576f9d0014d63faf.mockapi.io\";\n\nfunction UserHome(props) {\n  const { classes } = props;\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    const response = await axios.get(API_URL + \"/spot\");\n    setRows(response.data);\n  }\n\n  return (\n    <div className={classes.userHomeContainer}>\n      {/* <div className={classes.navbar}>\n        <Navbar />\n      </div> */}\n      <div classname={classes.appbar}>\n        <PrimarySearchAppBar />\n      </div>\n      <div className={classes.map}>\n        <InteractiveMap />\n      </div>\n      {/* <div className={classes.form}>\n        <SpotSearchForm />\n      </div> */}\n      <div className={classes.table}>\n        <SpotsList spots={rows} />\n      </div>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(UserHome);\n","export default {\n  userHomeContainer: {\n    height: \"100vh\",\n    width: \"99vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    position: \"relative\"\n  },\n  navbar: {\n    height: \"5vh\",\n    marginBottom: \"2rem\"\n  },\n  map: {\n    height: \"50vh\"\n  },\n  form: {\n    height: \"20vh\",\n    margin: \"1rem, 5rem\",\n    padding: \"2rem\",\n    position: \"relative\",\n    zIndex: \"100\",\n    left: \"1vw\",\n    top: \"5vh\"\n  },\n  table: {\n    height: \"55vh\"\n  }\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage\";\nimport UserHome from \"./components/UserHome\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={routeProps => <LoginPage {...routeProps} />}\n        />\n        <Route\n          exact\n          path=\"/home\"\n          render={routeProps => <UserHome {...routeProps} />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
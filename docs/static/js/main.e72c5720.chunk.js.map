{"version":3,"sources":["components/LoginPage.js","components/Navbar.js","styles/NavbarStyles.js","components/SpotSearchForm.js","components/SpotsList.js","components/InteractiveMap.js","components/PageFooter.js","styles/PageFooterStyles.js","components/UserHome.js","styles/UserHomeStyles.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","styles","props","classes","useState","email","setEmail","username","setUserName","className","LoginFormContainer","onSubmit","history","push","label","onChange","e","target","value","name","validators","errorMessages","Button","type","navbar","display","justifyContent","alignItems","height","backgroundColor","border","logo","marginRight","padding","fontSize","fontFamily","textDecoration","color","buttonContainer","href","addspot","variant","signout","to","SpotSearchForm","setInput","onClick","axios","get","url","then","response","console","log","data","spots","TableContainer","component","Paper","tableContainer","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","spot","key","scope","country","lat","long","probability","month","mapStyles","width","marginBottom","MapContainer","google","this","zoom","style","initialCenter","lng","Component","GoogleApiWrapper","apiKey","footer","fontWeight","footerEmoji","margin","paletteName","emoji","userHomeContainer","flexDirection","position","form","zIndex","left","top","rows","setRows","useEffect","a","async","API_URL","fetchData","InteractiveMap","App","exact","path","render","routeProps","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e72c5720.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Button } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"../styles/LoginPageStyles\";\n\nfunction LoginPage(props) {\n  const { classes } = props;\n  const [email, setEmail] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n\n  const handleNameChange = e => {\n    setUserName(e.target.value);\n  };\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    props.history.push(\"/home\");\n  };\n\n  return (\n    <div className={classes.LoginFormContainer}>\n      <ValidatorForm onSubmit={handleSubmit}>\n        <TextValidator\n          label=\"Username\"\n          onChange={handleNameChange}\n          name=\"username\"\n          value={username}\n          validators={[\"required\"]}\n          errorMessages={[\"this field is required\"]}\n        />\n        <TextValidator\n          label=\"Email\"\n          onChange={handleEmailChange}\n          name=\"email\"\n          value={email}\n          validators={[\"required\", \"isEmail\"]}\n          errorMessages={[\"this field is required\", \"email is not valid\"]}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </ValidatorForm>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(LoginPage);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"../styles/NavbarStyles\";\n\nfunction Navbar(props) {\n  const { classes } = props;\n  return (\n    <header className={classes.navbar}>\n      <div className={classes.logo}>\n        <a href=\"https://liviupreda.me/\">KTSRF</a>\n      </div>\n      <div className={classes.buttonContainer}>\n        <div className={classes.addspot}>\n          <Button variant=\"contained\" color=\"primary\">\n            Add Spot\n          </Button>\n        </div>\n        <div className={classes.signout}>\n          <Link to=\"/\">\n            <Button variant=\"contained\" color=\"primary\">\n              Sign Out\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default withStyles(styles)(Navbar);\n","export default {\n  navbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    height: \"5vh\",\n    backgroundColor: \"cornflowerblue\",\n    border: \"0.1rem solid #333\"\n  },\n  logo: {\n    marginRight: \"15px\",\n    padding: \"0 13px\",\n    fontSize: \"22px\",\n    backgroundColor: \"rgba(0, 212, 255, 1)\",\n    fontFamily: '\"Roboto\", sans-serif',\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"black\"\n    }\n  },\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    \"& addspot\": {\n      padding: \"1rem\"\n    },\n    \"& signout\": {\n      padding: \"1rem\",\n      \"& a\": {\n        textDecoration: \"none\"\n      }\n    }\n  }\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"@material-ui/core\";\n\nfunction SpotSearchForm(props) {\n  const url = \"https://5e3064ed576f9d0014d63faf.mockapi.io\";\n  const [input, setInput] = useState(\"\");\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    axios.get(url + \"/spot\").then(response => console.log(response.data));\n  };\n\n  return (\n    <div className=\"SpotSearchForm\">\n      <p>Locations</p>\n      <div>\n        <input type=\"text\" onChange={handleChange} />\n        <Button type=\"submit\" onClick={handleSubmit}>\n          Search\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default SpotSearchForm;\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"../styles/SpotsListStyles\";\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 650\n//   }\n// });\n\nfunction SpotsList(props) {\n  // const classes = useStyles();\n  const { classes, spots } = props;\n\n  return (\n    <div>\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Spot Name</TableCell>\n              <TableCell align=\"right\">Country</TableCell>\n              <TableCell align=\"right\">Latitude</TableCell>\n              <TableCell align=\"right\">Longitude</TableCell>\n              <TableCell align=\"right\">Wind Probability</TableCell>\n              <TableCell align=\"right\">When To Go</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {spots.map(spot => (\n              <TableRow key={spot.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {spot.name}\n                </TableCell>\n                <TableCell align=\"right\">{spot.country}</TableCell>\n                <TableCell align=\"right\">{spot.lat}</TableCell>\n                <TableCell align=\"right\">{spot.long}</TableCell>\n                <TableCell align=\"right\">{spot.probability}</TableCell>\n                <TableCell align=\"right\">{spot.month}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* <Button onClick={fetchData}>Get Data</Button> */}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(SpotsList);\n","import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\n\nconst mapStyles = {\n  width: \"100vw\",\n  height: \"40vh\",\n  marginBottom: \"2rem\"\n};\n\nexport class MapContainer extends Component {\n  render() {\n    return (\n      <div className=\"mapContainer\">\n        <Map\n          google={this.props.google}\n          zoom={14}\n          style={mapStyles}\n          initialCenter={{\n            lat: -1.2884,\n            lng: 36.8233\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAFR9ohystEpVf1UyEPad9Mfh56S3-R6Qo\"\n})(MapContainer);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport styles from \"../styles/PageFooterStyles\";\n\nfunction PageFooter(props) {\n  const { paletteName, emoji, classes } = props;\n  return (\n    <footer className={classes.footer}>\n      Liviu Preda 2020\n      {/* <span className={classes.footerEmoji}>{emoji}</span> */}\n    </footer>\n  );\n}\n\nexport default withStyles(styles)(PageFooter);\n","export default {\n  footer: {\n    backgroundColor: \"black\",\n    height: \"5vh\",\n\n    alignItems: \"center\",\n    fontWeight: \"bold\"\n  },\n  footerEmoji: {\n    fontSize: \"1.5rem\",\n    margin: \"0 1rem\"\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"./Navbar\";\nimport SpotSearchForm from \"./SpotSearchForm\";\nimport SpotsList from \"./SpotsList\";\nimport InteractiveMap from \"./InteractiveMap\";\nimport PageFooter from \"./PageFooter\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"../styles/UserHomeStyles\";\n\nconst API_URL = \"https://5e3064ed576f9d0014d63faf.mockapi.io\";\n\nfunction UserHome(props) {\n  const { classes } = props;\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    const response = await axios.get(API_URL + \"/spot\");\n    setRows(response.data);\n  }\n\n  return (\n    <div className={classes.userHomeContainer}>\n      <div className={classes.navbar}>\n        <Navbar />\n      </div>\n      <div className={classes.map}>\n        <InteractiveMap />\n      </div>\n      <div className={classes.form}>\n        <SpotSearchForm />\n      </div>\n      <div className={classes.table}>\n        <SpotsList spots={rows} />\n      </div>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(UserHome);\n","export default {\n  userHomeContainer: {\n    height: \"100vh\",\n    width: \"99vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    position: \"relative\"\n  },\n  navbar: {\n    height: \"5vh\",\n    marginBottom: \"2rem\"\n  },\n  map: {\n    height: \"30vh\"\n  },\n  form: {\n    height: \"20vh\",\n    margin: \"2rem, 5rem\",\n    padding: \"2rem\",\n    position: \"relative\",\n    zIndex: \"100\",\n    left: \"1vw\",\n    top: \"5vh\"\n  },\n  table: {\n    height: \"50vh\"\n  }\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage\";\nimport UserHome from \"./components/UserHome\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={routeProps => <LoginPage {...routeProps} />}\n        />\n        <Route\n          exact\n          path=\"/home\"\n          render={routeProps => <UserHome {...routeProps} />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}